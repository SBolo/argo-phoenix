load("@aspect_bazel_lib//lib:testing.bzl", "assert_archive_contains")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball", "oci_push")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

go_library(
    name = "app_lib",
    srcs = ["main.go"],
    importpath = ".",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "app",
    embed = [":app_lib"],
    visibility = ["//visibility:public"],
)

# Put app go_binary into a tar layer.
pkg_tar(
    name = "app_layer",
    srcs = [":app"],
)

# Prove that the application is at the path we expect in that tar.
assert_archive_contains(
    name = "test_app_layer",
    archive = "app_layer.tar",
    expected = ["app"],
)

oci_image(
    name = "image",
    base = "@golang",
    entrypoint = ["/app"],
    tars = [":app_layer"],
)

oci_push(
    name = "artifact_release",
    image = ":image",
    repository = "index.docker.io/sbolo/argo-phoenix-test",
    remote_tags = ["test-repo-go"],
)